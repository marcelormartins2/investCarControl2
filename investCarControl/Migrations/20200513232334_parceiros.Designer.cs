// <auto-generated />
using System;
using InvestCarControl.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InvestCarControl.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20200513232334_parceiros")]
    partial class parceiros
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("InvestCarControl.Models.Despesa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnName("data")
                        .HasColumnType("datetime");

                    b.Property<string>("Descricao")
                        .HasColumnName("descricao")
                        .HasColumnType("varchar(50)");

                    b.Property<double>("Valor")
                        .HasColumnName("valor")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.ToTable("despesa");
                });

            modelBuilder.Entity("InvestCarControl.Models.Fabricante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnName("nome")
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Prioridade")
                        .HasColumnName("prioridade")
                        .HasColumnType("int");

                    b.Property<string>("Site")
                        .HasColumnName("site")
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.ToTable("fabricante");
                });

            modelBuilder.Entity("InvestCarControl.Models.Modelocar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<int>("FabricanteId")
                        .HasColumnName("fabricante_id")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnName("nome")
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.HasIndex("FabricanteId")
                        .HasName("fk_modeloCar_fabricante1_idx");

                    b.ToTable("modelocar");
                });

            modelBuilder.Entity("InvestCarControl.Models.Parceiro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<string>("Endereço")
                        .HasColumnName("endereço")
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Nome")
                        .HasColumnName("nome")
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Telefone")
                        .HasColumnName("telefone")
                        .HasColumnType("varchar(45)");

                    b.Property<string>("UserName")
                        .HasColumnName("UserName")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("parceiro");
                });

            modelBuilder.Entity("InvestCarControl.Models.Participacao", b =>
                {
                    b.Property<int>("ParceiroId")
                        .HasColumnName("parceiro_id")
                        .HasColumnType("int");

                    b.Property<int>("VeiculoId")
                        .HasColumnName("veiculo_id")
                        .HasColumnType("int");

                    b.Property<double>("PorcentagemCompra")
                        .HasColumnName("porcentagemCompra")
                        .HasColumnType("double");

                    b.Property<double>("PorcentagemLucro")
                        .HasColumnName("porcentagemLucro")
                        .HasColumnType("double");

                    b.HasKey("ParceiroId", "VeiculoId");

                    b.HasIndex("ParceiroId")
                        .HasName("fk_parceiro_has_veiculo_parceiro_idx");

                    b.HasIndex("VeiculoId")
                        .HasName("fk_parceiro_has_veiculo_veiculo1_idx");

                    b.ToTable("participacao");
                });

            modelBuilder.Entity("InvestCarControl.Models.Responsavel", b =>
                {
                    b.Property<int>("DespesaId")
                        .HasColumnName("despesa_id")
                        .HasColumnType("int");

                    b.Property<int>("ParceiroId")
                        .HasColumnName("parceiro_id")
                        .HasColumnType("int");

                    b.Property<double>("Valor")
                        .HasColumnName("valor")
                        .HasColumnType("double");

                    b.HasKey("DespesaId", "ParceiroId");

                    b.HasIndex("DespesaId")
                        .HasName("fk_despesa_has_parceiro_despesa1_idx");

                    b.HasIndex("ParceiroId")
                        .HasName("fk_despesa_has_parceiro_parceiro1_idx");

                    b.ToTable("responsavel");
                });

            modelBuilder.Entity("InvestCarControl.Models.Veiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<int>("AnoFab")
                        .HasColumnName("anofab")
                        .HasColumnType("int");

                    b.Property<int>("AnoModelo")
                        .HasColumnName("anoModelo")
                        .HasColumnType("int");

                    b.Property<string>("Chassis")
                        .HasColumnName("chassis")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Cor")
                        .HasColumnName("cor")
                        .HasColumnType("varchar(15)");

                    b.Property<int?>("DespesaId")
                        .HasColumnName("despesa_id")
                        .HasColumnType("int");

                    b.Property<string>("Dut")
                        .HasColumnName("dut")
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Hodometro")
                        .HasColumnName("hodometro")
                        .HasColumnType("int");

                    b.Property<int>("ModeloCarId")
                        .HasColumnName("modeloCar_id")
                        .HasColumnType("int");

                    b.Property<string>("Origem")
                        .HasColumnName("origem")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Placa")
                        .HasColumnName("placa")
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("Renavam")
                        .HasColumnName("renavam")
                        .HasColumnType("int");

                    b.Property<double?>("ValorFipe")
                        .HasColumnName("valorfipe")
                        .HasColumnType("double");

                    b.Property<double?>("ValorPago")
                        .HasColumnName("valorpago")
                        .HasColumnType("double");

                    b.Property<double?>("ValorVenda")
                        .HasColumnName("valorvenda")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("DespesaId")
                        .HasName("fk_veiculo_despesa1_idx");

                    b.HasIndex("ModeloCarId")
                        .HasName("fk_veiculo_modeloCar1_idx");

                    b.ToTable("veiculo");
                });

            modelBuilder.Entity("InvestCarControl.Models.Modelocar", b =>
                {
                    b.HasOne("InvestCarControl.Models.Fabricante", "Fabricante")
                        .WithMany("Modelocar")
                        .HasForeignKey("FabricanteId")
                        .HasConstraintName("fk_modeloCar_fabricante1")
                        .IsRequired();
                });

            modelBuilder.Entity("InvestCarControl.Models.Participacao", b =>
                {
                    b.HasOne("InvestCarControl.Models.Parceiro", "Parceiro")
                        .WithMany("Participacao")
                        .HasForeignKey("ParceiroId")
                        .HasConstraintName("fk_parceiro_has_veiculo_parceiro")
                        .IsRequired();

                    b.HasOne("InvestCarControl.Models.Veiculo", "Veiculo")
                        .WithMany("Participacao")
                        .HasForeignKey("VeiculoId")
                        .HasConstraintName("fk_parceiro_has_veiculo_veiculo1")
                        .IsRequired();
                });

            modelBuilder.Entity("InvestCarControl.Models.Responsavel", b =>
                {
                    b.HasOne("InvestCarControl.Models.Despesa", "Despesa")
                        .WithMany("Responsavel")
                        .HasForeignKey("DespesaId")
                        .HasConstraintName("fk_despesa_has_parceiro_despesa1")
                        .IsRequired();

                    b.HasOne("InvestCarControl.Models.Parceiro", "Parceiro")
                        .WithMany("Responsavel")
                        .HasForeignKey("ParceiroId")
                        .HasConstraintName("fk_despesa_has_parceiro_parceiro1")
                        .IsRequired();
                });

            modelBuilder.Entity("InvestCarControl.Models.Veiculo", b =>
                {
                    b.HasOne("InvestCarControl.Models.Despesa", "Despesa")
                        .WithMany("Veiculo")
                        .HasForeignKey("DespesaId")
                        .HasConstraintName("fk_veiculo_despesa1");

                    b.HasOne("InvestCarControl.Models.Modelocar", "ModeloCar")
                        .WithMany("Veiculo")
                        .HasForeignKey("ModeloCarId")
                        .HasConstraintName("fk_veiculo_modeloCar1")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
