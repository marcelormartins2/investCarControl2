<script src="~/js/jquery-2.1.3.min.js"></script>
<script src="~/js/jquery.Jcrop.js"></script>
<link rel="stylesheet" href="~/css/jquery.Jcrop.css" type="text/css" />

<script type="text/javascript">
    function alterarImg(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#cropbox')
                    .attr('src', e.target.result);
            };

            reader.readAsDataURL(input.files[0]);
        }

	}
			$(function ($) {

				var jcrop_api; // Holder for the API

               

				initJcrop();

				function initJcrop()//{{{
				{
					$('.requiresjcrop').hide();

					$('#cropbox').Jcrop(
						{
                            bgColor: 'black',
							bgOpacity: .4,
							maxSize: [128, 128],
							minSize:[128,128],
                            setSelect: [10, 10, 50, 50],
							aspectRatio: 1 / 1
						}, function () {

						$('.requiresjcrop').show();

						jcrop_api = this;
						jcrop_api.animateTo([10,10,200,300]);

						$('#can_click,#can_move,#can_size').attr('checked','checked');
						$('#ar_lock,#size_lock,#bg_swap').attr('checked',false);

					});

				};
				//}}}

				// Use the API to find cropping dimensions
				// Then generate a random selection
				// This function is used by setSelect and animateTo buttons
				// Mainly for demonstration purposes
				function getRandom() {
					var dim = jcrop_api.getBounds();
					return [
						Math.round(Math.random() * dim[0]),
						Math.round(Math.random() * dim[1]),
						Math.round(Math.random() * dim[0]),
						Math.round(Math.random() * dim[1])
					];
				};

				// Attach interface buttons
				// This may appear to be a lot of code but it's simple stuff
				$('#setSelect').click(function(e) {
					// Sets a random selection
					jcrop_api.setSelect(getRandom());
				});
				$('#animateTo').click(function(e) {
					// Animates to a random selection
					jcrop_api.animateTo(getRandom());
				});
				$('#release').click(function(e) {
					// Release method clears the selection
					jcrop_api.release();
				});
				$('#disable').click(function(e) {
					jcrop_api.disable();

					$('#enable').show();
					$('.requiresjcrop').hide();
				});
				$('#enable').click(function(e) {
					jcrop_api.enable();

					$('#enable').hide();
					$('.requiresjcrop').show();
				});
				$('#rehook').click(function(e) {
					$('#rehook,#enable').hide();
					initJcrop();
					$('#unhook,.requiresjcrop').show();
					return false;
				});
				$('#unhook').click(function(e) {
					jcrop_api.destroy();

					$('#unhook,#enable,.requiresjcrop').hide();
					$('#rehook').show();
					return false;
				});

				// Hook up the three image-swapping buttons
				$('#img2').click(function (e) {
					jcrop_api.destroy();
					
				});
				$('#img2').change(function (e) {
                    var reader = new FileReader();

                    reader.onloadend = function (ex) {
                        $('#cropbox')
							.attr('src', ex.target.result);
                        initJcrop();
                    };

                    reader.readAsDataURL(this.files[0]);
					
				});

				$('#img1').click(function (e) {
                    jcrop_api.setImage('/img/avatars/128.jpg');
					jcrop_api.setOptions({ bgOpacity: .6 });
					return false;
				});
				
                $('#cropbox').change(function (e) {
						window.alert("teste");
					return false;
				});
				$('#img3').click(function(e) {
                    jcrop_api.setImage('/img/avatars/128.jpg',function(){
						this.setOptions({
							bgOpacity: 1,
                            outerImage: '/img/avatars/default.png'
						});
						this.animateTo(getRandom());
					});
					return false;
				});

				// The checkboxes simply set options based on it's checked value
				// Options are changed by passing a new options object

				// Also, to prevent strange behavior, they are initially checked
				// This matches the default initial state of Jcrop

				$('#can_click').change(function(e) {
					jcrop_api.setOptions({ allowSelect: !!this.checked });
					jcrop_api.focus();
				});
				$('#can_move').change(function(e) {
					jcrop_api.setOptions({ allowMove: !!this.checked });
					jcrop_api.focus();
				});
				$('#can_size').change(function(e) {
					jcrop_api.setOptions({ allowResize: !!this.checked });
					jcrop_api.focus();
				});
				$('#ar_lock').change(function(e) {
					jcrop_api.setOptions(this.checked? { aspectRatio: 4/3 }: { aspectRatio: 0 });
					jcrop_api.focus();
				});
				$('#size_lock').change(function(e) {
					jcrop_api.setOptions(this.checked? {
						minSize: [ 80, 80 ],
						maxSize: [ 350, 350 ]
					}: {
						minSize: [ 0, 0 ],
						maxSize: [ 0, 0 ]
					});
					jcrop_api.focus();
				});

			});

</script>
<table>
    <tr>
        <td>
            <div id="outer">
                <div class="jcExample">
                    <div class="article">

                        <h1>Jcrop - API Demo</h1>
                        <img src="~/img/avatars/default.png" id="cropbox" />

                        <fieldset class="requiresjcrop" style="margin: .5em 0;">
                            <legend>Change Image</legend>
                            <span>
                                <input type="file" accept="image/x-png,image/gif,image/jpeg" id="img2" />
                                <button id="img1">Sago</button>
                                <button id="img3">Sago w/ outerImage</button>
                            </span>
                        </fieldset>

                    </div>
                </div>
            </div>
        </td>
    </tr>
</table>